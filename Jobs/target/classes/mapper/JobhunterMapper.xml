<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.project.jobs.dao.JobhunterDao">    

	<sql id="whereClause"><!-- 조각엘리먼트 -->
   		<if test="searchtype != null and searchkeyword !=''">
	   		 <where>	
	   		 	<choose>
	   		 		<when test="searchtype==1"><!-- searchtype이 글제목 -->
	   		 			LOWER(jh.subject) like LOWER('%'||#{searchkeyword}||'%')
	   		 		</when>
	   		 		<when test="searchtype==2"><!-- searchtype이 작성자 -->
	   		 			LOWER(ju.name) like LOWER('%'||#{searchkeyword}||'%')
	   		 		</when>
	   		 		<when test="searchtype==3"><!-- searchtype이 글내용 -->
	   		 			LOWER(jh.content) like LOWER('%'||#{searchkeyword}||'%')
	   		 		</when>
	   		 	</choose>
	   		 </where>
   		 </if>
   </sql>
	
	<!-- 인재등록글 작성 -->
	<insert id="insertJobhunter" parameterType="Jobhunter">
		<selectKey keyProperty="num" resultType="int" order="BEFORE">
			select jobs_hunterboard_seq.nextval from dual
		</selectKey>
		insert into jobs_hunterboard values(#{num},#{type:VARCHAR},#{career:VARCHAR}, 
		#{subject:VARCHAR},#{content:VARCHAR},sysdate,#{readnum:VARCHAR},#{filename:VARCHAR}
		,#{filesize:VARCHAR},#{idx_fk})
	</insert>
	
	<!-- 인재정보목록-->
	<select id="selectJobhunterAll" resultType="Jobhunter" parameterType="map">
		select * from (select row_number() over(order by jh.num desc) rn, jh.*, ju.*
		FROM jobs_hunterboard jh JOIN jobs_user ju ON jh.idx_fk = ju.idx
		<include refid="whereClause"/>
		)
		where rn between #{start} and #{end}
	</select>
	
	<!-- 인재정보 -->
	<select id="selectByNum" parameterType="int" resultType="Jobhunter">
		select jh.*, ju.idx, ju.userid, CryptString.decrypt(ju.pwd, 'key') pwd, ju.name, ju.imagename, ju.info, ju.state, ju.indate, ju.outdate
		from jobs_hunterboard jh JOIN jobs_user ju ON jh.idx_fk = ju.idx where num=#{num}
	</select>
	
	<!-- 조회수 증가 -->
   <update id="updateReadnum" parameterType="int">
   	update jobs_hunterboard set readnum = readnum+1 where num = #{num}
   </update>
   
   <!-- 조회수 top5 목록 -->
   <select id="selectJobhunterTop5" resultType="Jobhunter" parameterType="int">
		select * from(select rownum rn, a.* from(select * FROM jobs_hunterboard jh JOIN jobs_user ju ON jh.idx_fk = ju.idx ORDER BY readnum desc) a) where rn between 1 and 5
	</select>
	
	<!-- 최근글 6개 목록 -->
    <select id="selectJobhunterlatest" resultType="Jobhunter" parameterType="int">
		select * from(select rownum rn, a.* from(select * FROM jobs_hunterboard jh JOIN jobs_user ju ON jh.idx_fk = ju.idx ORDER BY num desc) a) where rn between 1 and 6
	</select>
	
	<!-- 글 삭제 -->
	<delete id="deleteJobhunter" parameterType="int">
		delete from jobs_hunterboard where num=#{num}
	</delete>
	
	<!-- 글 수정 파일 첨부했을때 -->
	<update id="updateJobhunterF" parameterType="Jobhunter">
		update jobs_hunterboard set type=#{type:VARCHAR}, career=#{career:VARCHAR}, subject=#{subject:VARCHAR}, content=#{content:VARCHAR}, filename=#{filename:VARCHAR},filesize=#{filesize:VARCHAR} where num=#{num:NUMERIC}
	</update>
	
	<!-- 글 수정 파일 첨부 안했을때 -->
	<update id="updateJobhunter" parameterType="Jobhunter">
 		update jobs_hunterboard set type=#{type:VARCHAR}, career=#{career:VARCHAR}, subject=#{subject:VARCHAR}, content=#{content:VARCHAR} where num=#{num:NUMERIC}
	</update>
	
	<!-- 각 분야별 카운트세기 -->
	<select id="selectCount" resultType="Jobhunter" parameterType="String">
		select 
			count(num) as totalcount,
			count(case when type='1' then 1 end) as type1,
			count(case when type='2' then 1 end) as type2,
			count(case when type='3' then 1 end) as type3,
			count(case when career='1' then 1 end) as career1,
			count(case when career='2' then 1 end) as career2,
			count(case when career='3' then 1 end) as career3
		from jobs_hunterboard
	</select>
	
	<!-- 카테고리 관련 -->
	<select id="selectCategory2" resultType="Jobhunter" parameterType="map">
		select * from jobs_hunterboard jh JOIN jobs_user ju ON jh.idx_fk = ju.idx
		<where>
			<if test="colname=='type'">
				type=#{category}
			</if>
			<if test="colname=='career'">
				career=#{category}
			</if>
		</where>
	</select>
	
	<!-- 글목록 관련 (게시물 수 가져오기) -->
   <select id="getTotalCount" resultType="int" parameterType="map">
   		select count(num) from jobs_hunterboard jh JOIN jobs_user ju ON jh.idx_fk = ju.idx
   		<include refid="whereClause"/>
   </select>
   
   <!-- 본인이 작성한 글 가져오기 -->
   <select id="listJobhunterMe" resultType="Jobhunter" parameterType="String">
   		select * from jobs_hunterboard jh JOIN jobs_user ju ON jh.idx_fk = ju.idx where ju.userid=#{userid}
   </select>
</mapper>













